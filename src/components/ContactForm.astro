<form
  id="contact-form"
  name="contact"
  action="/form-success"
  method="post"
  data-netlify="true"
>
  <fieldset>
    <label for="firstName">First name</label>
    <input
      type="text"
      name="firstName"
      id="firstName"
      autocomplete="given-name"
    />
    <span class="name-error error-text font-xs-step-2"
      >First name is required</span
    >
  </fieldset>
  <fieldset>
    <label for="lastName">Last name</label>
    <input
      type="text"
      name="lastName"
      id="lastName"
      autocomplete="family-name"
    />
    <span class="name-error error-text font-xs-step-2"
      >Last name is required</span
    >
  </fieldset>
  <fieldset>
    <label for="email">Email</label>
    <input type="email" name="email" id="email" autocomplete="off" />
    <span id="email-error" class="error-text font-xs-step-2"
      >Email is not valid</span
    >
  </fieldset>
  <fieldset>
    <label for="message">Message</label>
    <textarea name="message" id="message" rows="5"></textarea>
  </fieldset>
  <button class="submit btn" type="submit">Send</button>
</form>

<style lang="scss">
  span {
    display: block;
    text-align: end;
  }
  .error-text {
    display: none;
    color: var(--clr-error);
  }

  form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  label {
    color: var(--color-white);
  }
  input,
  textarea {
    color: inherit;
    width: 100%;
    padding: 0.25em 0.5em;
    background-color: var(--input-background);
    border: none;
    border-radius: var(--border-radius-sm);
    border-bottom: 2px solid var(--input-grey);
    outline: transparent;
  }

  input:focus,
  input:focus-within,
  textarea:focus,
  textarea:focus-within {
    background-color: var(--input-focus);
    color: var(--color-primary);
  }

  input.error {
    border: 2px solid var(--clr-error);
  }

  input:not(textarea) {
    line-height: 1;
    height: 2.25rem;
  }

  textarea {
    margin-top: var(--space-2xs);
    resize: vertical;
    overflow: auto;
  }

  button.submit {
    align-self: flex-start;
    font-weight: 700;
    background: var(--color-accent-400);
    padding: 0.5em 1.75em;
    border-radius: var(--border-radius-sm);
    margin-top: var(--space-m-l);
    transition:
      background 0.2s ease-in-out,
      transform 0.2s ease-in-out;

    &:hover {
      background: var(--color-accent-300);
      transform: scale(1.03);
    }
  }
</style>

<script>
  function validateEmail(email) {
    const regex = /^[\w-]+(\.[\w-]+)*@([\w-]+\.)+[a-zA-Z]{2,7}$/;
    return regex.test(email);
  }

  function validateName(name: string): boolean {
    return name.trim() !== "";
  }

  const form = document.getElementById("contact-form") as HTMLFormElement;
  const firstName = document.getElementById("firstName") as HTMLInputElement;
  const lastName = document.getElementById("lastName") as HTMLInputElement;
  const emailInput = document.getElementById("email") as HTMLInputElement;
  const nameError = document.querySelectorAll(
    ".name-error"
  ) as NodeListOf<HTMLSpanElement>;
  const emailError = document.getElementById("email-error") as HTMLSpanElement;

  firstName.addEventListener("blur", () => {
    if (!validateName(firstName.value)) {
      firstName.classList.add("error");
      nameError.forEach((error) => {
        error.style.display = "block";
      });
    } else {
      firstName.classList.remove("error");
      nameError.forEach((error) => {
        error.style.display = "none";
      });
    }
  });

  lastName.addEventListener("blur", () => {
    if (!validateName(lastName.value)) {
      lastName.classList.add("error");
      nameError.forEach((error) => {
        error.style.display = "block";
      });
    } else {
      lastName.classList.remove("error");
      nameError.forEach((error) => {
        error.style.display = "none";
      });
    }
  });

  emailInput.addEventListener("blur", () => {
    if (!validateEmail(emailInput.value)) {
      emailInput.classList.add("error");
      emailError.style.display = "block";
    } else {
      emailInput.classList.remove("error");
      emailError.style.display = "none";
    }
  });

  form.addEventListener("submit", (e) => {
    if (
      !firstName.value ||
      !lastName.value ||
      !validateEmail(emailInput.value)
    ) {
      e.preventDefault();
      alert("Please correct the errors and try again.");
    }
  });
</script>
